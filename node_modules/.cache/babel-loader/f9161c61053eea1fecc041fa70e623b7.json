{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/colinblk/Documents/Web Developer/react/robotfriends/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.searchBoxChange = e => {\n      this.setState({\n        searchfield: e.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentWillMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => {\n      response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const filteredRobot = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"Robotfriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.searchBoxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/colinblk/Documents/Web Developer/react/robotfriends/src/App.js"],"names":["React","CardList","SearchBox","App","Component","constructor","searchBoxChange","e","setState","searchfield","target","value","state","robots","componentWillMount","fetch","then","response","json","users","render","filteredRobot","filter","robot","name","toLowerCase","includes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAkBdC,eAlBc,GAkBIC,CAAC,IAAI;AACnB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACH,KApBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDK,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACC,IAAT;AACH,KAHL,EAIKF,IAJL,CAIUG,KAAK,IAAI;AACX,WAAKX,QAAL,CAAc;AAAEK,QAAAA,MAAM,EAAEM;AAAV,OAAd;AACH,KANL;AAOH;;AAMDC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,KAAK,IAAI;AACpD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,WAAvB,EAAlC,CAAP;AACH,KAFqB,CAAtB;AAIA,wBACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAG,KAAKnB;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAGe;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAnC6B;;AAoCjC;AAED,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentWillMount() {\n        fetch('http://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                response.json()\n            })\n            .then(users => {\n                this.setState({ robots: users })\n            })\n    }\n\n    searchBoxChange = e => {\n        this.setState({ searchfield: e.target.value })\n    }\n    \n    render() {\n        const filteredRobot = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n\n        return (\n            <div className='tc'>\n                <h1 className='f1'>Robotfriends</h1>\n                <SearchBox searchChange={ this.searchBoxChange } />\n                <CardList robots={ filteredRobot } />\n            </div>\n        );\n    }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}